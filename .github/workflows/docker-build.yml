name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  IMAGE_NAME: mygmailverifier/qwertt-type
  DOCKER_USERNAME: mygmailverifier

jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Git Clone Action
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: Kaiyiwing/qwerty-learner
          path: src

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: src/yarn.lock

      - run: |
          cd src
          yarn
          yarn build

      # 设置 buildx 环境，支持多架构构建
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        #run: echo "${{ secrets.PASSWORD }}" | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build and push (arm64 only)
        run: |
          cp -r src/build dist
          IMAGE_NAME=$(echo $IMAGE_NAME | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest

          echo "VERSION=$VERSION"

          docker buildx build \
            --platform linux/arm64 \
            --file Dockerfile \
            --tag $IMAGE_NAME:$VERSION \
            --push .
          docker push $IMAGE_NAME:$VERSION
